Using Triangle , Quadrangle:
=============================

#include <GL/gl.h>
#include <GL/glut.h>
void display(void)
{
/* clear all pixels */
glClear (GL_COLOR_BUFFER_BIT);
/* draw white polygon (rectangle) with corners at
* (0.25, 0.25, 0.0) and (0.75, 0.75, 0.0)
*/
  glBegin(GL_QUADS); //Big Square
    glColor3f (0.0, 0.0, 1.0); //blue
  glVertex3f(0.4f, 0.2f, 0.0f);
  glVertex3f(0.65f, 0.2f, 0.0f);
  glVertex3f(0.65f, 0.55f, 0.0f);
  glVertex3f(0.4f, 0.55f, 0.0f);
  glEnd();


    glBegin(GL_TRIANGLES); //Roof Triangle
    glColor3f(1.0,0.0,0.0); //red
  glVertex3f(0.69f, 0.55f, 0.0f);
  glVertex3f(0.36f, 0.55f, 0.0f);
  glVertex3f(0.52f, 0.75f, 0.0f);
  glEnd();


   glBegin(GL_QUADS);  // Chimney
    glColor3f(1.0,0.0,0.0); //red
  glVertex3f(0.58f, 0.65f, 0.0f);
  glVertex3f(0.60f, 0.65f, 0.0f);
  glVertex3f(0.60f, 0.75f, 0.0f);
  glVertex3f(0.58f, 0.75f, 0.0f);

  glEnd();


  glBegin(GL_QUADS);  // Door
  glColor3f (0.0, 1.0, 0.0); //green
  glVertex3f(0.5f, 0.2f, 0.0f);
  glVertex3f(0.55f, 0.2f, 0.0f);
  glVertex3f(0.55f, 0.35f, 0.0f);
  glVertex3f(0.5f, 0.35f, 0.0f);
  glEnd();


  glBegin(GL_QUADS);  // Left Window
    glColor3f (0.0, 1.0, 0.0); //green
  glVertex3f(0.45f, 0.23f, 0.0f);
  glVertex3f(0.47f, 0.23f, 0.0f);
  glVertex3f(0.47f, 0.26f, 0.0f);
  glVertex3f(0.45f, 0.26f, 0.0f);
  glEnd();


  glBegin(GL_QUADS);  // Right Window
  glColor3f (0.0, 1.0, 0.0); //green
  glVertex3f(0.58f, 0.23f, 0.0f);
  glVertex3f(0.60f, 0.23f, 0.0f);
  glVertex3f(0.60f, 0.26f, 0.0f);
  glVertex3f(0.58f, 0.26f, 0.0f);
  glEnd();

glFlush ();
}
void init (void)
{
/* select clearing (background) color */
glClearColor (0.0, 0.0, 0.0, 0.0);
/* initialize viewing values */
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
glOrtho(0.0, 1.0, 0.0, 1.0, -10.0, 10.0);
}
/*
* Declare initial window size, position, and display mode
* (single buffer and RGBA). Open window with "hello"
* in its title bar. Call initialization routines.
* Register callback function to display graphics.
* Enter main loop and process events.
*/
int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize (600, 600);
glutInitWindowPosition (100, 100);
glutCreateWindow ("hello");
init ();
glutDisplayFunc(display);
glutMainLoop();
return 0; /* ISO C requires main to return int. */
}